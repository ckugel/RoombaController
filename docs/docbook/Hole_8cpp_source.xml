<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Hole_8cpp_source" xml:lang="en-US">
<title>Hole.cpp</title>
<indexterm><primary>/home/calebk/Documents/coding/RoombaController/src/Hole.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_Hole_8cpp_source_1l00001"/>00001 
<anchor xml:id="_Hole_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_Hole_8hpp">Hole.hpp</link>&quot;</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00007"/>00007 
<anchor xml:id="_Hole_8cpp_source_1l00008"/>00008 
<anchor xml:id="_Hole_8cpp_source_1l00009"/><link linkend="_classHole_1a079e74ec763052a10fedea61a6a5088b">00009</link> <link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">Hole::Hole</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;positionOne,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;positionTwo,&#32;<emphasis role="keywordtype">double</emphasis>&#32;holeSize)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;o1&#32;=&#32;positionOne.<link linkend="_classPose2D_1a34c15f20448e7efd354c507d38ec2891">clone</link>();
<anchor xml:id="_Hole_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;o2&#32;=&#32;positionTwo.<link linkend="_classPose2D_1a34c15f20448e7efd354c507d38ec2891">clone</link>();
<anchor xml:id="_Hole_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;threshold&#32;=&#32;o1.<link linkend="_classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3">distanceTo</link>(o2)&#32;/&#32;sqrt(2);
<anchor xml:id="_Hole_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;this-&gt;holeSize&#32;=&#32;holeSize;
<anchor xml:id="_Hole_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_classHole_1adc6df39c2118fd21749786927800de4b">registerPointsToHole</link>(o1,&#32;o2);
<anchor xml:id="_Hole_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;this-&gt;points&#32;=&#32;std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;this-&gt;pointHoles&#32;=&#32;std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00017"/>00017 }
<anchor xml:id="_Hole_8cpp_source_1l00018"/>00018 
<anchor xml:id="_Hole_8cpp_source_1l00019"/><link linkend="_classHole_1a653b2d43ddca456e31c6be921d7077df">00019</link> <link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">Hole::Hole</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;positionOne,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;positionTwo,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;foundHole,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;Pose2D&gt;&amp;&#32;points,&#32;<emphasis role="keywordtype">double</emphasis>&#32;holeSize)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;threshold&#32;=&#32;positionOne.<link linkend="_classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3">distanceTo</link>(positionTwo)&#32;/&#32;sqrt(2);
<anchor xml:id="_Hole_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(foundHole)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_classHole_1adc6df39c2118fd21749786927800de4b">registerPointsToHole</link>(positionOne,&#32;positionTwo);
<anchor xml:id="_Hole_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;foundHole&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00027"/>00027 
<anchor xml:id="_Hole_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;this-&gt;points&#32;=&#32;std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;&amp;&#32;point&#32;:&#32;points)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;points-&gt;push_back(point);
<anchor xml:id="_Hole_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;this-&gt;pointHoles&#32;=&#32;std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00033"/>00033 }
<anchor xml:id="_Hole_8cpp_source_1l00034"/>00034 
<anchor xml:id="_Hole_8cpp_source_1l00035"/><link linkend="_classHole_1a1b9d48a850759ae1b826b7476c304785">00035</link> <link linkend="_classPose2D">Pose2D</link>&#32;<link linkend="_classHole_1a1b9d48a850759ae1b826b7476c304785">Hole::getOneSquareCorner</link>()&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;cornerOne;
<anchor xml:id="_Hole_8cpp_source_1l00037"/>00037 }
<anchor xml:id="_Hole_8cpp_source_1l00038"/>00038 
<anchor xml:id="_Hole_8cpp_source_1l00039"/><link linkend="_classHole_1ae5ba1de89591495ee62c784c8bcc4b72">00039</link> <link linkend="_classPose2D">Pose2D</link>&#32;<link linkend="_classHole_1ae5ba1de89591495ee62c784c8bcc4b72">Hole::getSecondSquareCorner</link>()&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;cornerTwo;
<anchor xml:id="_Hole_8cpp_source_1l00041"/>00041 }
<anchor xml:id="_Hole_8cpp_source_1l00042"/>00042 
<anchor xml:id="_Hole_8cpp_source_1l00043"/><link linkend="_classHole_1ad224d20fbe2037b97e19344b8f0157e0">00043</link> <link linkend="_classPose2D">Pose2D</link>&#32;<link linkend="_classHole_1ad224d20fbe2037b97e19344b8f0157e0">Hole::copyDoOperation</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;position)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_Hole_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;center(this-&gt;cornerOne);
<anchor xml:id="_Hole_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;center.<link linkend="_classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51">setHeading</link>(center.<link linkend="_classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773">angleTo</link>(this-&gt;cornerTwo));
<anchor xml:id="_Hole_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;center.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(center.<link linkend="_classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3">distanceTo</link>(this-&gt;cornerTwo)&#32;/&#32;2);
<anchor xml:id="_Hole_8cpp_source_1l00047"/>00047 
<anchor xml:id="_Hole_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;pos(position);
<anchor xml:id="_Hole_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;pos.<link linkend="_classPose2D_1adc44dfc82549ea97d3622052b615bf55">minus</link>(center);
<anchor xml:id="_Hole_8cpp_source_1l00050"/>00050 
<anchor xml:id="_Hole_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;pos.<link linkend="_classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61">rotateByAngle</link>(phi);
<anchor xml:id="_Hole_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;pos.<link linkend="_classPose2D_1a5a031312210c5fd0d88855df26b53c1a">plus</link>(<link linkend="_classPose2D">Pose2D</link>(x_translation_two,&#32;y_translation_two));
<anchor xml:id="_Hole_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pos;
<anchor xml:id="_Hole_8cpp_source_1l00054"/>00054 }
<anchor xml:id="_Hole_8cpp_source_1l00055"/>00055 
<anchor xml:id="_Hole_8cpp_source_1l00056"/><link linkend="_classHole_1a519b0f73c960b116403ee937a8fb0a3e">00056</link> std::vector&lt;Pose2D&gt;&#32;<link linkend="_classHole_1a519b0f73c960b116403ee937a8fb0a3e">Hole::getSuggestedNodePlacements</link>()&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;nodes&#32;that&#32;we&#32;will&#32;generate&#32;will&#32;be&#32;around&#32;the&#32;hole,&#32;One&#32;hole&#32;length&#32;*&#32;1.5&#32;45&#32;degrees&#32;offset&#32;to&#32;each&#32;corner&#32;from&#32;the&#32;center&#32;of&#32;the&#32;hole</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;std::vector&lt;Pose2D&gt;&#32;toReturn;
<anchor xml:id="_Hole_8cpp_source_1l00059"/>00059 
<anchor xml:id="_Hole_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;foundHole)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;center(this-&gt;cornerOne);
<anchor xml:id="_Hole_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;center.<link linkend="_classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51">setHeading</link>(center.<link linkend="_classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773">angleTo</link>(this-&gt;cornerTwo));
<anchor xml:id="_Hole_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;temp(center);
<anchor xml:id="_Hole_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;magnitude&#32;=&#32;<link linkend="_Hole_8hpp_1a657e122f8983d0a993ee0266696f1984">HOLE_SIZE</link>&#32;*&#32;1.5;
<anchor xml:id="_Hole_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint8_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;toAdd(temp);
<anchor xml:id="_Hole_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toAdd.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(magnitude);
<anchor xml:id="_Hole_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toReturn.push_back(toAdd);
<anchor xml:id="_Hole_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp.<link linkend="_classPose2D_1a77b5a2d38fe501e59a8d308b5cfa0508">addAngle</link>(M_PI&#32;/&#32;4);
<anchor xml:id="_Hole_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint16_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this-&gt;points-&gt;size();&#32;i++)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;suggested(this-&gt;points-&gt;at(i));
<anchor xml:id="_Hole_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suggested.<link linkend="_classPose2D_1a77b5a2d38fe501e59a8d308b5cfa0508">addAngle</link>(M_PI);
<anchor xml:id="_Hole_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suggested.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>);
<anchor xml:id="_Hole_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toReturn.push_back(suggested);
<anchor xml:id="_Hole_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;toReturn;
<anchor xml:id="_Hole_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00082"/>00082 
<anchor xml:id="_Hole_8cpp_source_1l00083"/><link linkend="_classHole_1afd4c5c949e5c37e58ff10927e475fcdf">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classHole_1afd4c5c949e5c37e58ff10927e475fcdf">Hole::isInSquare</link>(<link linkend="_classPose2D">Pose2D</link>&amp;&#32;position)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_Hole_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&#32;&lt;&lt;&#32;&quot;starting&#32;position:&#32;&quot;&#32;&lt;&lt;&#32;position&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;general&#32;idea:&#32;we&#32;use&#32;the&#32;operations&#32;in&#32;the&#32;object&#32;to&#32;translate&#32;objects&#32;for&#32;checks</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00086"/>00086 
<anchor xml:id="_Hole_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;pos&#32;=&#32;<link linkend="_classHole_1ad224d20fbe2037b97e19344b8f0157e0">copyDoOperation</link>(position);
<anchor xml:id="_Hole_8cpp_source_1l00088"/>00088 
<anchor xml:id="_Hole_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&#32;&lt;&lt;&#32;&quot;translated&#32;position:&#32;&quot;&#32;&lt;&lt;&#32;pos&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00090"/>00090 
<anchor xml:id="_Hole_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&lt;&#32;threshold&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&lt;&#32;threshold)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;-&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;-&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&lt;&#32;threshold&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&lt;&#32;threshold)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;+&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;+&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&lt;&#32;threshold&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&lt;&#32;threshold)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&lt;&#32;threshold&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;+&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;+&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&lt;&#32;threshold)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&lt;&#32;threshold&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;-&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;pos.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;-&#32;<link linkend="_Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60">BOT_RADIUS</link>&#32;&lt;&#32;threshold)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00107"/>00107 
<anchor xml:id="_Hole_8cpp_source_1l00108"/>00108 }
<anchor xml:id="_Hole_8cpp_source_1l00109"/>00109 
<anchor xml:id="_Hole_8cpp_source_1l00110"/><link linkend="_classHole_1a4ea8b237954a3decf415e384b042eacd">00110</link> <link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">Hole::Hole</link>(<emphasis role="keywordtype">double</emphasis>&#32;X1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Y1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;X2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Y2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;holeSize)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;o1(X1,&#32;Y1);
<anchor xml:id="_Hole_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;o2(X2,&#32;Y2);
<anchor xml:id="_Hole_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;this-&gt;threshold&#32;=&#32;o1.<link linkend="_classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3">distanceTo</link>(o2)&#32;/&#32;sqrt(2);
<anchor xml:id="_Hole_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;this-&gt;holeSize&#32;=&#32;holeSize;
<anchor xml:id="_Hole_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<link linkend="_classHole_1adc6df39c2118fd21749786927800de4b">registerPointsToHole</link>(o1,&#32;o2);
<anchor xml:id="_Hole_8cpp_source_1l00116"/>00116 
<anchor xml:id="_Hole_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;this-&gt;points&#32;=&#32;std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;this-&gt;pointHoles&#32;=&#32;std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00119"/>00119 }
<anchor xml:id="_Hole_8cpp_source_1l00120"/>00120 
<anchor xml:id="_Hole_8cpp_source_1l00121"/><link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">00121</link> <link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">Hole::Hole</link>()&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;this-&gt;holeSize&#32;=&#32;<link linkend="_Hole_8hpp_1a657e122f8983d0a993ee0266696f1984">HOLE_SIZE</link>;
<anchor xml:id="_Hole_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;this-&gt;threshold&#32;=&#32;<link linkend="_Hole_8hpp_1a657e122f8983d0a993ee0266696f1984">HOLE_SIZE</link>;
<anchor xml:id="_Hole_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;this-&gt;foundHole&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;this-&gt;points&#32;=&#32;std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;this-&gt;pointHoles&#32;=&#32;std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00127"/>00127 }
<anchor xml:id="_Hole_8cpp_source_1l00128"/>00128 
<anchor xml:id="_Hole_8cpp_source_1l00129"/><link linkend="_classHole_1a6c5cc5e4efbe73711dab187e00a0a171">00129</link> <link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">Hole::Hole</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;initialPoint,&#32;<emphasis role="keywordtype">double</emphasis>&#32;holeSize)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;this-&gt;foundHole&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;this-&gt;points&#32;=&#32;std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;this-&gt;points-&gt;push_back(initialPoint);
<anchor xml:id="_Hole_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;this-&gt;pointHoles&#32;=&#32;std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;this-&gt;holeSize&#32;=&#32;holeSize;
<anchor xml:id="_Hole_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;this-&gt;threshold&#32;=&#32;holeSize;
<anchor xml:id="_Hole_8cpp_source_1l00136"/>00136 }
<anchor xml:id="_Hole_8cpp_source_1l00137"/>00137 
<anchor xml:id="_Hole_8cpp_source_1l00138"/><link linkend="_classHole_1afb912f0b7b58f2074fcbbc50184e39c2">00138</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classHole_1afb912f0b7b58f2074fcbbc50184e39c2">Hole::pointCouldBeMemberOfHole</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;measurment)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;point&#32;:&#32;*this-&gt;points)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(point.distanceTo(measurment)&#32;&gt;&#32;holeSize&#32;*&#32;std::sqrt(2))&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00145"/>00145 }
<anchor xml:id="_Hole_8cpp_source_1l00146"/>00146 
<anchor xml:id="_Hole_8cpp_source_1l00147"/><link linkend="_classHole_1a4ddff9cebed0fa967b3a8ea12aac1195">00147</link> <link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">Hole::Hole</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classHole">Hole</link>&amp;&#32;hole)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;this-&gt;cornerOne&#32;=&#32;hole.cornerOne;
<anchor xml:id="_Hole_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;this-&gt;cornerTwo&#32;=&#32;hole.cornerTwo;
<anchor xml:id="_Hole_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;this-&gt;foundHole&#32;=&#32;hole.foundHole;
<anchor xml:id="_Hole_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;this-&gt;phi&#32;=&#32;hole.phi;
<anchor xml:id="_Hole_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;this-&gt;threshold&#32;=&#32;hole.threshold;
<anchor xml:id="_Hole_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;this-&gt;x_translation_one&#32;=&#32;hole.x_translation_one;
<anchor xml:id="_Hole_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;this-&gt;y_translation_one&#32;=&#32;hole.y_translation_one;
<anchor xml:id="_Hole_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;this-&gt;x_translation_two&#32;=&#32;hole.x_translation_two;
<anchor xml:id="_Hole_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;this-&gt;y_translation_two&#32;=&#32;hole.y_translation_two;
<anchor xml:id="_Hole_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;this-&gt;holeSize&#32;=&#32;hole.holeSize;
<anchor xml:id="_Hole_8cpp_source_1l00158"/>00158 
<anchor xml:id="_Hole_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;this-&gt;points&#32;=&#32;std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint16_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;hole.points-&gt;size();&#32;i++)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;points-&gt;push_back(hole.points-&gt;data()[i]);
<anchor xml:id="_Hole_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;this-&gt;pointHoles&#32;=&#32;std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint16_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;hole.pointHoles-&gt;size();&#32;i++)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;pointHoles-&gt;push_back(hole.pointHoles-&gt;data()[i]);
<anchor xml:id="_Hole_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00167"/>00167 
<anchor xml:id="_Hole_8cpp_source_1l00168"/>00168 }
<anchor xml:id="_Hole_8cpp_source_1l00169"/>00169 
<anchor xml:id="_Hole_8cpp_source_1l00170"/><link linkend="_classHole_1a39673dc613c45644ff844c7b81709ab9">00170</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classHole_1a39673dc613c45644ff844c7b81709ab9">Hole::addPoint</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;position)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;this-&gt;points-&gt;push_back(position);
<anchor xml:id="_Hole_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="comment">//General&#32;flow:</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;points-&gt;size()&#32;&gt;&#32;2)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;should&#32;be&#32;3&#32;elements</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pick&#32;2&#32;with&#32;close&#32;headings</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00176"/>00176 
<anchor xml:id="_Hole_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;index&#32;of&#32;the&#32;pivot</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00178"/>00178 
<anchor xml:id="_Hole_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;perpendicularPosition;
<anchor xml:id="_Hole_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;parallelOne;
<anchor xml:id="_Hole_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;parallelTwo;
<anchor xml:id="_Hole_8cpp_source_1l00182"/>00182 
<anchor xml:id="_Hole_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;positions&#32;one&#32;and&#32;two</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(this-&gt;points-&gt;at(0).getHeading()&#32;-&#32;this-&gt;points-&gt;at(1).getHeading())&#32;&lt;&#32;M_PI&#32;/&#32;2)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;yay&#32;we&#32;have&#32;our&#32;parallel&#32;par&#32;of&#32;one&#32;and&#32;two</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perpendicularPosition&#32;=&#32;this-&gt;points-&gt;at(2);
<anchor xml:id="_Hole_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne&#32;=&#32;this-&gt;points-&gt;at(0);
<anchor xml:id="_Hole_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelTwo&#32;=&#32;this-&gt;points-&gt;at(1);
<anchor xml:id="_Hole_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;positions&#32;two&#32;and&#32;three</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(this-&gt;points-&gt;at(1).getHeading()&#32;-&#32;this-&gt;points-&gt;at(2).getHeading())&#32;&lt;&#32;M_PI&#32;/&#32;2)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;yay&#32;we&#32;know&#32;our&#32;parallel&#32;pair&#32;are&#32;two&#32;and&#32;three</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perpendicularPosition&#32;=&#32;this-&gt;points-&gt;at(0);
<anchor xml:id="_Hole_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne&#32;=&#32;this-&gt;points-&gt;at(1);
<anchor xml:id="_Hole_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelTwo&#32;=&#32;this-&gt;points-&gt;at(2);
<anchor xml:id="_Hole_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00197"/>00197 
<anchor xml:id="_Hole_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;positions&#32;one&#32;and&#32;three</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(this-&gt;points-&gt;at(0).getHeading()&#32;-&#32;this-&gt;points-&gt;at(2).getHeading())&#32;&lt;&#32;M_PI&#32;/&#32;2)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;have&#32;our&#32;parallel&#32;pair&#32;of&#32;1&#32;and&#32;three</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perpendicularPosition&#32;=&#32;this-&gt;points-&gt;at(1);
<anchor xml:id="_Hole_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne&#32;=&#32;this-&gt;points-&gt;at(0);
<anchor xml:id="_Hole_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelTwo&#32;=&#32;this-&gt;points-&gt;at(2);
<anchor xml:id="_Hole_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00205"/>00205 
<anchor xml:id="_Hole_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parallelOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&gt;&#32;parallelTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>())&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&#32;temp&#32;=&#32;parallelOne;
<anchor xml:id="_Hole_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne&#32;=&#32;parallelTwo;
<anchor xml:id="_Hole_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelTwo&#32;=&#32;temp;
<anchor xml:id="_Hole_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00211"/>00211 
<anchor xml:id="_Hole_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;none&#32;of&#32;the&#32;angles&#32;are&#32;similiar&#32;so&#32;we&#32;know&#32;that&#32;we&#32;have&#32;three&#32;measurmenets&#32;from&#32;all&#32;different&#32;edges&#32;of&#32;the&#32;square</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;the&#32;two&#32;similiar&#32;angles&#32;when&#32;turned&#32;around</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pose&#32;1&#32;and&#32;2&#32;are&#32;out&#32;of&#32;phase</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(this-&gt;points-&gt;at(0).getHeading()&#32;+&#32;this-&gt;points-&gt;at(1).getHeading())&#32;&lt;&#32;0.1&#32;||&#32;fabs(fabs(this-&gt;points-&gt;at(0).getHeading())&#32;-&#32;fabs(this-&gt;points-&gt;at(1).getHeading()))&#32;&lt;&#32;0.1)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne&#32;=&#32;this-&gt;points-&gt;at(0);
<anchor xml:id="_Hole_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(holeSize);
<anchor xml:id="_Hole_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelTwo&#32;=&#32;this-&gt;points-&gt;at(1);
<anchor xml:id="_Hole_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perpendicularPosition&#32;=&#32;this-&gt;points-&gt;at(2);
<anchor xml:id="_Hole_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pose&#32;2&#32;and&#32;three&#32;are&#32;out&#32;of&#32;phase</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(this-&gt;points-&gt;at(2).getHeading()&#32;+&#32;this-&gt;points-&gt;at(1).getHeading())&#32;&lt;&#32;0.1&#32;||&#32;fabs(fabs(this-&gt;points-&gt;at(2).getHeading())&#32;-&#32;fabs(this-&gt;points-&gt;at(1).getHeading()))&#32;&lt;&#32;0.1)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne&#32;=&#32;this-&gt;points-&gt;at(2);
<anchor xml:id="_Hole_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(holeSize);
<anchor xml:id="_Hole_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelTwo&#32;=&#32;this-&gt;points-&gt;at(1);
<anchor xml:id="_Hole_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perpendicularPosition&#32;=&#32;this-&gt;points-&gt;at(0);
<anchor xml:id="_Hole_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pose&#32;3&#32;and&#32;1&#32;are&#32;out&#32;of&#32;phase</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(this-&gt;points-&gt;at(0).getHeading()&#32;+&#32;this-&gt;points-&gt;at(2).getHeading())&#32;&lt;&#32;0.1&#32;||&#32;fabs(fabs(this-&gt;points-&gt;at(0).getHeading())&#32;-&#32;fabs(this-&gt;points-&gt;at(2).getHeading()))&#32;&lt;&#32;0.1)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne&#32;=&#32;this-&gt;points-&gt;at(0);
<anchor xml:id="_Hole_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelOne.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(holeSize);
<anchor xml:id="_Hole_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelTwo&#32;=&#32;this-&gt;points-&gt;at(2);
<anchor xml:id="_Hole_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perpendicularPosition&#32;=&#32;this-&gt;points-&gt;at(1);
<anchor xml:id="_Hole_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;i&apos;m&#32;not&#32;sure&#32;how&#32;we&#32;got&#32;here&#32;and&#32;I&apos;&#32;m&#32;just&#32;gonna&#32;clear&#32;the&#32;entire&#32;list</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;points-&gt;clear();
<anchor xml:id="_Hole_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00240"/>00240 
<anchor xml:id="_Hole_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00242"/>00242 
<anchor xml:id="_Hole_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;cornerOne;
<anchor xml:id="_Hole_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;oppositeCorner;
<anchor xml:id="_Hole_8cpp_source_1l00245"/>00245 
<anchor xml:id="_Hole_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;we&#32;have&#32;to&#32;make&#32;the&#32;cirtical&#32;points&#32;from&#32;the&#32;two&#32;parallel&#32;lines&#32;and&#32;the&#32;perpendicular&#32;line</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dx&#32;=&#32;(parallelTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;-&#32;parallelOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>());
<anchor xml:id="_Hole_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dy&#32;=&#32;(parallelTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;-&#32;parallelOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>());
<anchor xml:id="_Hole_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(dx)&#32;&lt;&#32;0.01)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;vertical&#32;line</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;xCornerOne&#32;=&#32;parallelOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>();
<anchor xml:id="_Hole_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;yCornerOne&#32;=&#32;perpendicularPosition.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>();
<anchor xml:id="_Hole_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerOne&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(xCornerOne,&#32;yCornerOne);
<anchor xml:id="_Hole_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(cornerOne);
<anchor xml:id="_Hole_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner.<link linkend="_classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51">setHeading</link>((cornerOne.<link linkend="_classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773">angleTo</link>(parallelOne)&#32;+&#32;cornerOne.<link linkend="_classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773">angleTo</link>(parallelTwo))&#32;/&#32;2);
<anchor xml:id="_Hole_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(holeSize&#32;*&#32;sqrt(2));
<anchor xml:id="_Hole_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;horizontal&#32;line</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(dy)&#32;&lt;&#32;0.01)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;xCornerOne&#32;=&#32;perpendicularPosition.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>();
<anchor xml:id="_Hole_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;yCornerOne&#32;=&#32;parallelOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>();
<anchor xml:id="_Hole_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerOne&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(xCornerOne,&#32;yCornerOne);
<anchor xml:id="_Hole_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(cornerOne);
<anchor xml:id="_Hole_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner.<link linkend="_classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51">setHeading</link>((parallelOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;+&#32;perpendicularPosition.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>())&#32;/&#32;2);
<anchor xml:id="_Hole_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(holeSize&#32;*&#32;sqrt(2));
<anchor xml:id="_Hole_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;m1&#32;=&#32;(parallelTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;-&#32;parallelOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>())&#32;/&#32;dx;
<anchor xml:id="_Hole_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b1&#32;=&#32;-&#32;m1&#32;*&#32;parallelOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;+&#32;parallelOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>();
<anchor xml:id="_Hole_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;m2&#32;=&#32;-&#32;1&#32;/&#32;m1;
<anchor xml:id="_Hole_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b2&#32;=&#32;-m2&#32;*&#32;perpendicularPosition.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;+&#32;perpendicularPosition.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>();
<anchor xml:id="_Hole_8cpp_source_1l00272"/>00272 
<anchor xml:id="_Hole_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;xIntersection&#32;=&#32;(1&#32;/&#32;m1&#32;+&#32;m1)&#32;/&#32;(b2&#32;-&#32;b1);
<anchor xml:id="_Hole_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;yIntersection&#32;=&#32;xIntersection&#32;*&#32;m1&#32;+&#32;b1;
<anchor xml:id="_Hole_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerOne&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(xIntersection,&#32;yIntersection);
<anchor xml:id="_Hole_8cpp_source_1l00276"/>00276 
<anchor xml:id="_Hole_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;favorite&#32;very&#32;dumb&#32;method</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;angleToOther&#32;=&#32;(cornerOne.<link linkend="_classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773">angleTo</link>(parallelOne)&#32;+&#32;cornerOne.<link linkend="_classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773">angleTo</link>(perpendicularPosition))&#32;/&#32;2;
<anchor xml:id="_Hole_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(cornerOne);
<anchor xml:id="_Hole_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner.<link linkend="_classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51">setHeading</link>(angleToOther);
<anchor xml:id="_Hole_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oppositeCorner.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(holeSize&#32;*&#32;sqrt(2));
<anchor xml:id="_Hole_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00283"/>00283 
<anchor xml:id="_Hole_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;cornerOne&#32;=&#32;cornerOne;
<anchor xml:id="_Hole_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;cornerTwo&#32;=&#32;oppositeCorner;
<anchor xml:id="_Hole_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;foundHole&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00288"/>00288 
<anchor xml:id="_Hole_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!foundHole)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;cornerOneNew(position);
<anchor xml:id="_Hole_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerOneNew.<link linkend="_classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61">rotateByAngle</link>(M_PI&#32;/&#32;4);
<anchor xml:id="_Hole_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerOneNew.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(2);
<anchor xml:id="_Hole_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;cornerTwoNew(position);
<anchor xml:id="_Hole_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;an&#32;astute&#32;reader&#32;will&#32;notice&#32;that&#32;this&#32;is&#32;really&#32;stupid&#32;and&#32;that&#32;there&#32;is&#32;a&#32;relatively&#32;simple</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;math&#32;to&#32;accomplish&#32;this&#32;goal&#32;in&#32;one&#32;operation</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;however&#32;I&#32;am&#32;stupid</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerTwoNew.<link linkend="_classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61">rotateByAngle</link>(-M_PI&#32;/&#32;4);
<anchor xml:id="_Hole_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerTwoNew.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(2);
<anchor xml:id="_Hole_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerTwoNew.<link linkend="_classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61">rotateByAngle</link>(M_PI&#32;/&#32;2);
<anchor xml:id="_Hole_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cornerTwoNew.<link linkend="_classPose2D_1a84216b76ce7d5a554794b43c56574582">translateByMagnitude</link>(4);
<anchor xml:id="_Hole_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classHole">Hole</link>&#32;hole(cornerOneNew,&#32;cornerTwoNew,&#32;4);
<anchor xml:id="_Hole_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;pointHoles-&gt;push_back(hole);
<anchor xml:id="_Hole_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00304"/>00304 }
<anchor xml:id="_Hole_8cpp_source_1l00305"/>00305 
<anchor xml:id="_Hole_8cpp_source_1l00306"/><link linkend="_classHole_1adc6df39c2118fd21749786927800de4b">00306</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classHole_1adc6df39c2118fd21749786927800de4b">Hole::registerPointsToHole</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;positionOne,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;positionTwo)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;the&#32;first&#32;translation</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;cornerOne&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(positionOne);
<anchor xml:id="_Hole_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;cornerTwo&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(positionTwo);
<anchor xml:id="_Hole_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;D(positionOne);
<anchor xml:id="_Hole_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;foundHole&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00312"/>00312 
<anchor xml:id="_Hole_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;wrong&#32;should&#32;be&#32;center&#32;x&#32;and&#32;y</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;center(positionOne);
<anchor xml:id="_Hole_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;center.<link linkend="_classPose2D_1aae96b589dd219d641a039b8fe1a56d7b">vecAdd</link>(center.<link linkend="_classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773">angleTo</link>(positionTwo),&#32;center.<link linkend="_classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3">distanceTo</link>(positionTwo)&#32;/&#32;2);
<anchor xml:id="_Hole_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;x_translation_one&#32;=&#32;-center.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>();
<anchor xml:id="_Hole_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;y_translation_one&#32;=&#32;-center.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>();
<anchor xml:id="_Hole_8cpp_source_1l00318"/>00318 
<anchor xml:id="_Hole_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;phi;
<anchor xml:id="_Hole_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;D.<link linkend="_classPose2D_1a5a031312210c5fd0d88855df26b53c1a">plus</link>(<link linkend="_classPose2D">Pose2D</link>(x_translation_one,&#32;y_translation_one));
<anchor xml:id="_Hole_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(D.<link linkend="_classPose2D_1aa5f78e433ba60f61ea49b08ec8ff4d08">getQuadrant</link>())&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="_Hole_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(D.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>())&#32;&lt;&#32;0.01)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;y&#32;axis</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(D.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;-&#32;M_PI&#32;/&#32;3;&#32;<emphasis role="comment">//&#32;just&#32;a&#32;nudge</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;M_PI&#32;/&#32;4&#32;*&#32;3;
<anchor xml:id="_Hole_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;x&#32;axis</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(D.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&gt;&#32;0)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;-M_PI&#32;/&#32;4&#32;*&#32;3;
<anchor xml:id="_Hole_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;M_PI&#32;/&#32;3;
<anchor xml:id="_Hole_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="_Hole_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;M_PI;
<anchor xml:id="_Hole_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="_Hole_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;M_PI&#32;/&#32;2;
<anchor xml:id="_Hole_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
<anchor xml:id="_Hole_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;-M_PI&#32;/&#32;2;
<anchor xml:id="_Hole_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="_Hole_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phi&#32;=&#32;0;
<anchor xml:id="_Hole_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00355"/>00355 
<anchor xml:id="_Hole_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;D.<link linkend="_classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61">rotateByAngle</link>(phi);
<anchor xml:id="_Hole_8cpp_source_1l00357"/>00357 
<anchor xml:id="_Hole_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;newAngle&#32;=&#32;M_PI&#32;/&#32;4&#32;-&#32;atan2(-D.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>(),&#32;-D.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>());&#32;<emphasis role="comment">//&#32;see&#32;desmos&#32;graph</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;D.<link linkend="_classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61">rotateByAngle</link>(newAngle);
<anchor xml:id="_Hole_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;phi&#32;=&#32;newAngle;
<anchor xml:id="_Hole_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;this-&gt;phi&#32;=&#32;phi;
<anchor xml:id="_Hole_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;position&#32;one&#32;into</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;x_translation_two&#32;=&#32;-D.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>();
<anchor xml:id="_Hole_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;y_translation_two&#32;=&#32;-D.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>();
<anchor xml:id="_Hole_8cpp_source_1l00365"/>00365 
<anchor xml:id="_Hole_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;threshold&#32;=&#32;cornerOne.<link linkend="_classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3">distanceTo</link>(cornerTwo)&#32;/&#32;sqrt(2);
<anchor xml:id="_Hole_8cpp_source_1l00367"/>00367 
<anchor xml:id="_Hole_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;<emphasis role="comment">/*std::cout&#32;&lt;&lt;&#32;&quot;x&#32;translation:&#32;&quot;&#32;&lt;&lt;&#32;x_translation_one&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;&quot;y&#32;translation:&#32;&quot;&#32;&lt;&lt;&#32;y_translation_one&#32;&lt;&lt;&#32;std::endl</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00369"/>00369 <emphasis role="comment">&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;angleTurn:&#32;&quot;&#32;&lt;&lt;&#32;phi&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;&quot;x&#32;translation&#32;2:&#32;&quot;&#32;&lt;&lt;&#32;x_translation_two&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;&quot;y_translation:&#32;&quot;&#32;&lt;&lt;&#32;y_translation_two&#32;&lt;&lt;&#32;std::endl</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00370"/>00370 <emphasis role="comment">&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;threshold:&#32;&quot;&#32;&lt;&lt;&#32;threshold&#32;&lt;&lt;&#32;std::endl;*/</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00371"/>00371 }
<anchor xml:id="_Hole_8cpp_source_1l00372"/>00372 
<anchor xml:id="_Hole_8cpp_source_1l00373"/><link linkend="_classHole_1a371c0f905489a21d9276bb383a572487">00373</link> std::ostream&#32;&amp;<link linkend="_Hole_8cpp_1a371c0f905489a21d9276bb383a572487">operator&lt;&lt;</link>(std::ostream&#32;&amp;os,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classHole">Hole</link>&#32;&amp;hole)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;cornerOne:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.cornerOne&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cornerTwo:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.cornerTwo&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;threshold:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.threshold&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;phi:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.phi
<anchor xml:id="_Hole_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;x_translation_one:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.x_translation_one&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y_translation_one:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.y_translation_one
<anchor xml:id="_Hole_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;x_translation_two:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.x_translation_two&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y_translation_two:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.y_translation_two
<anchor xml:id="_Hole_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;foundHole:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.foundHole&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;points:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;hole.points;
<anchor xml:id="_Hole_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;os;
<anchor xml:id="_Hole_8cpp_source_1l00379"/>00379 }
<anchor xml:id="_Hole_8cpp_source_1l00380"/>00380 
<anchor xml:id="_Hole_8cpp_source_1l00381"/><link linkend="_classHole_1a73735b03496aad26f53879b2c50fcc71">00381</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classHole_1a73735b03496aad26f53879b2c50fcc71">Hole::offset</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;offset)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(foundHole)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;cornerOne.<link linkend="_classPose2D_1a5a031312210c5fd0d88855df26b53c1a">plus</link>(<link linkend="_classHole_1a73735b03496aad26f53879b2c50fcc71">offset</link>);
<anchor xml:id="_Hole_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;cornerTwo.<link linkend="_classPose2D_1a5a031312210c5fd0d88855df26b53c1a">plus</link>(<link linkend="_classHole_1a73735b03496aad26f53879b2c50fcc71">offset</link>);
<anchor xml:id="_Hole_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classHole_1adc6df39c2118fd21749786927800de4b">registerPointsToHole</link>(cornerOne,&#32;cornerTwo);
<anchor xml:id="_Hole_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint16_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this-&gt;points-&gt;size();&#32;i++)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;points-&gt;at(i).plus(<link linkend="_classHole_1a73735b03496aad26f53879b2c50fcc71">offset</link>);
<anchor xml:id="_Hole_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;pointHoles-&gt;at(i).offset(<link linkend="_classHole_1a73735b03496aad26f53879b2c50fcc71">offset</link>);
<anchor xml:id="_Hole_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00391"/>00391 }
<anchor xml:id="_Hole_8cpp_source_1l00392"/>00392 
<anchor xml:id="_Hole_8cpp_source_1l00393"/><link linkend="_classHole_1ae7c69bf5e1d37a1230b50187e7442506">00393</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classHole_1ae7c69bf5e1d37a1230b50187e7442506">Hole::lineIntersectsHole</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;posOne,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classPose2D">Pose2D</link>&amp;&#32;posTwo)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_Hole_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(foundHole)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;positionOne;
<anchor xml:id="_Hole_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classPose2D">Pose2D</link>&#32;positionTwo;
<anchor xml:id="_Hole_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(posOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&lt;&#32;posTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>())&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionOne&#32;=&#32;<link linkend="_classHole_1ad224d20fbe2037b97e19344b8f0157e0">copyDoOperation</link>(posOne);
<anchor xml:id="_Hole_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionTwo&#32;=&#32;<link linkend="_classHole_1ad224d20fbe2037b97e19344b8f0157e0">copyDoOperation</link>(posTwo);
<anchor xml:id="_Hole_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionOne&#32;=&#32;<link linkend="_classHole_1ad224d20fbe2037b97e19344b8f0157e0">copyDoOperation</link>(posTwo);
<anchor xml:id="_Hole_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionTwo&#32;=&#32;<link linkend="_classHole_1ad224d20fbe2037b97e19344b8f0157e0">copyDoOperation</link>(posOne);
<anchor xml:id="_Hole_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00404"/>00404 
<anchor xml:id="_Hole_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;the&#32;line&#32;between&#32;them,&#32;at&#32;any&#32;point&#32;falls&#32;between&#32;0&#32;and&#32;threshold</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;annoyingly&#32;I&#32;think&#32;this&#32;means&#32;that&#32;we&#32;need&#32;to&#32;do&#32;real&#32;math&#32;(ew)</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;-&#32;positionTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>())&#32;&lt;&#32;0.05)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;have&#32;a&#32;vertical&#32;line</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;the&#32;vertical&#32;line&#32;starts&#32;below&#32;0&#32;and&#32;ends&#32;after&#32;threshold&#32;and&#32;X&#32;is&#32;between&#32;0&#32;and&#32;threshold&#32;then&#32;it&#32;intersects</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(((positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&lt;&#32;threshold)&#32;||
<anchor xml:id="_Hole_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(positionTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;positionTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;&lt;&#32;threshold))&#32;&amp;&amp;
<anchor xml:id="_Hole_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmax(positionOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>(),&#32;positionTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>())&#32;&gt;&#32;threshold&#32;&amp;&amp;
<anchor xml:id="_Hole_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmin(positionOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>(),&#32;positionTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>())&#32;&lt;&#32;0);
<anchor xml:id="_Hole_8cpp_source_1l00414"/>00414 
<anchor xml:id="_Hole_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(positionOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;-&#32;positionTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>())&#32;&lt;&#32;0.05)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;have&#32;a&#32;horizontal&#32;line</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(((positionOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;positionOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&lt;&#32;threshold)&#32;||
<anchor xml:id="_Hole_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(positionTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;positionTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;&lt;&#32;threshold))&#32;&amp;&amp;
<anchor xml:id="_Hole_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmax(positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>(),&#32;positionTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>())&#32;&gt;&#32;threshold&#32;&amp;&amp;
<anchor xml:id="_Hole_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmin(positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>(),&#32;positionTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>())&#32;&lt;&#32;0);
<anchor xml:id="_Hole_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00423"/>00423 
<anchor xml:id="_Hole_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;we&#32;gotta&#32;make&#32;a&#32;line,&#32;which&#32;we&#32;can&#32;guranteed&#32;will&#32;exist&#32;without&#32;a&#32;slope&#32;of&#32;0</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;m&#32;=&#32;(positionTwo.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;-&#32;positionOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>())&#32;/&#32;(positionTwo.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;-&#32;positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>());
<anchor xml:id="_Hole_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b&#32;=&#32;positionOne.<link linkend="_classPose2D_1acfc52591b36947d8ead57ada1c12e5c2">getY</link>()&#32;-&#32;(positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;*&#32;m);
<anchor xml:id="_Hole_8cpp_source_1l00427"/>00427 
<anchor xml:id="_Hole_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;now&#32;that&#32;we&#32;know&#32;the&#32;equation&#32;of&#32;the&#32;line&#32;we&#32;can&#32;determine&#32;if&#32;it&#32;intersects&#32;the&#32;x&#32;axis,&#32;y&#32;axis,&#32;or&#32;y&#32;=&#32;threshold&#32;or&#32;x&#32;=&#32;threshold</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;yayyyy&#32;finding&#32;0&apos;s&#32;of&#32;a&#32;function</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;y2Check&#32;=&#32;m&#32;*&#32;positionOne.<link linkend="_classPose2D_1ad3453560b394884b5b94de1264b946fa">getX</link>()&#32;+&#32;b;
<anchor xml:id="_Hole_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((b&#32;&lt;&#32;threshold&#32;&amp;&amp;&#32;b&#32;&gt;&#32;0)&#32;||&#32;(y2Check&#32;&lt;&#32;threshold&#32;&amp;&amp;&#32;y2Check&#32;&gt;&#32;0))&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;we&#32;intersect&#32;with&#32;the&#32;x&#32;axis</emphasis>
<anchor xml:id="_Hole_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;xValueAtYIsZero&#32;=&#32;(-b&#32;/&#32;m);
<anchor xml:id="_Hole_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;xValueATYIsThreshold&#32;=&#32;(threshold&#32;-&#32;b)&#32;/&#32;m;
<anchor xml:id="_Hole_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(xValueAtYIsZero&#32;&gt;&#32;0&#32;&amp;&amp;&#32;xValueAtYIsZero&#32;&lt;&#32;threshold)&#32;||
<anchor xml:id="_Hole_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(xValueATYIsThreshold&#32;&gt;&#32;0&#32;&amp;&amp;&#32;xValueATYIsThreshold&#32;&lt;&#32;threshold);
<anchor xml:id="_Hole_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint16_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this-&gt;pointHoles-&gt;size();&#32;i++)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;pointHoles-&gt;at(i).lineIntersectsHole(posOne,&#32;posTwo))&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_Hole_8cpp_source_1l00447"/>00447 }
<anchor xml:id="_Hole_8cpp_source_1l00448"/>00448 
<anchor xml:id="_Hole_8cpp_source_1l00449"/><link linkend="_classHole_1ac73d25f280d747ba04a6e9b90d587d94">00449</link> <link linkend="_classHole_1a90b129019613cc439b9834058f8727b1">Hole::Hole</link>(<emphasis role="keywordtype">double</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;y1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;x2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;y2)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;this-&gt;cornerOne&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(x1,&#32;y1);
<anchor xml:id="_Hole_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;this-&gt;cornerTwo&#32;=&#32;<link linkend="_classPose2D">Pose2D</link>(x2,&#32;y2);
<anchor xml:id="_Hole_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;this-&gt;points&#32;=&#32;std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;this-&gt;pointHoles&#32;=&#32;std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();
<anchor xml:id="_Hole_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;this-&gt;holeSize&#32;=&#32;cornerOne.<link linkend="_classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3">distanceTo</link>(cornerTwo)&#32;/&#32;sqrt(2);
<anchor xml:id="_Hole_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;<link linkend="_classHole_1adc6df39c2118fd21749786927800de4b">registerPointsToHole</link>(cornerOne,&#32;cornerTwo);
<anchor xml:id="_Hole_8cpp_source_1l00456"/>00456 }
<anchor xml:id="_Hole_8cpp_source_1l00457"/>00457 
<anchor xml:id="_Hole_8cpp_source_1l00458"/><link linkend="_classHole_1a863918993a62cc90b99a66c48e9e0bdc">00458</link> std::vector&lt;Hole&gt;&#32;<link linkend="_classHole_1a863918993a62cc90b99a66c48e9e0bdc">Hole::getSubHolesCopy</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_Hole_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;std::vector&lt;Hole&gt;&#32;toReturn;
<anchor xml:id="_Hole_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint16_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this-&gt;pointHoles-&gt;size();&#32;i++)&#32;{
<anchor xml:id="_Hole_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toReturn.push_back(this-&gt;pointHoles-&gt;at(i));
<anchor xml:id="_Hole_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;}
<anchor xml:id="_Hole_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;toReturn;
<anchor xml:id="_Hole_8cpp_source_1l00464"/>00464 }
</programlisting></section>
