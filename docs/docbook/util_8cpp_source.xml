<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_util_8cpp_source" xml:lang="en-US">
<title>util.cpp</title>
<indexterm><primary>/home/calebk/Documents/coding/RoombaController/src/util.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_util_8cpp_source_1l00001"/>00001 
<anchor xml:id="_util_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_util_8hpp">util.hpp</link>&quot;</emphasis>
<anchor xml:id="_util_8cpp_source_1l00006"/>00006 
<anchor xml:id="_util_8cpp_source_1l00007"/><link linkend="_util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68">00007</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68">orientation</link>(<emphasis role="keywordtype">double</emphasis>&#32;px,&#32;<emphasis role="keywordtype">double</emphasis>&#32;py,&#32;<emphasis role="keywordtype">double</emphasis>&#32;qx,&#32;<emphasis role="keywordtype">double</emphasis>&#32;qy,&#32;<emphasis role="keywordtype">double</emphasis>&#32;rx,&#32;<emphasis role="keywordtype">double</emphasis>&#32;ry)&#32;{
<anchor xml:id="_util_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;val&#32;=&#32;(qy&#32;-&#32;py)&#32;*&#32;(rx&#32;-&#32;qx)&#32;-&#32;(qx&#32;-&#32;px)&#32;*&#32;(ry&#32;-&#32;qy);
<anchor xml:id="_util_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fabs(val)&#32;&lt;&#32;0.1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;<emphasis role="comment">//&#32;collinear</emphasis>
<anchor xml:id="_util_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(val&#32;&gt;&#32;0)&#32;?&#32;1&#32;:&#32;2;&#32;<emphasis role="comment">//&#32;clockwise&#32;or&#32;counterclockwise</emphasis>
<anchor xml:id="_util_8cpp_source_1l00011"/>00011 }
<anchor xml:id="_util_8cpp_source_1l00012"/>00012 
<anchor xml:id="_util_8cpp_source_1l00013"/><link linkend="_util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3">00013</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3">onSegment</link>(<emphasis role="keywordtype">double</emphasis>&#32;px,&#32;<emphasis role="keywordtype">double</emphasis>&#32;py,&#32;<emphasis role="keywordtype">double</emphasis>&#32;qx,&#32;<emphasis role="keywordtype">double</emphasis>&#32;qy,&#32;<emphasis role="keywordtype">double</emphasis>&#32;rx,&#32;<emphasis role="keywordtype">double</emphasis>&#32;ry)&#32;{
<anchor xml:id="_util_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;qx&#32;&lt;=&#32;(px&#32;&gt;&#32;rx&#32;?&#32;px&#32;:&#32;rx)&#32;&amp;&amp;&#32;qx&#32;&gt;=&#32;(px&#32;&lt;&#32;rx&#32;?&#32;px&#32;:&#32;rx)&#32;&amp;&amp;
<anchor xml:id="_util_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qy&#32;&lt;=&#32;(py&#32;&gt;&#32;ry&#32;?&#32;py&#32;:&#32;ry)&#32;&amp;&amp;&#32;qy&#32;&gt;=&#32;(py&#32;&lt;&#32;ry&#32;?&#32;py&#32;:&#32;ry);
<anchor xml:id="_util_8cpp_source_1l00016"/>00016 }
<anchor xml:id="_util_8cpp_source_1l00017"/>00017 
<anchor xml:id="_util_8cpp_source_1l00018"/><link linkend="_util_8cpp_1a4e5e5d18b9bfa850378af284c05268df">00018</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_util_8cpp_1a4e5e5d18b9bfa850378af284c05268df">doIntersect</link>(<emphasis role="keywordtype">double</emphasis>&#32;p1x,&#32;<emphasis role="keywordtype">double</emphasis>&#32;p1y,&#32;<emphasis role="keywordtype">double</emphasis>&#32;q1x,&#32;<emphasis role="keywordtype">double</emphasis>&#32;q1y,&#32;<emphasis role="keywordtype">double</emphasis>&#32;p2x,&#32;<emphasis role="keywordtype">double</emphasis>&#32;p2y,&#32;<emphasis role="keywordtype">double</emphasis>&#32;q2x,&#32;<emphasis role="keywordtype">double</emphasis>&#32;q2y)&#32;{
<anchor xml:id="_util_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;o1&#32;=&#32;<link linkend="_util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68">orientation</link>(p1x,&#32;p1y,&#32;q1x,&#32;q1y,&#32;p2x,&#32;p2y);
<anchor xml:id="_util_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;o2&#32;=&#32;<link linkend="_util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68">orientation</link>(p1x,&#32;p1y,&#32;q1x,&#32;q1y,&#32;q2x,&#32;q2y);
<anchor xml:id="_util_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;o3&#32;=&#32;<link linkend="_util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68">orientation</link>(p2x,&#32;p2y,&#32;q2x,&#32;q2y,&#32;p1x,&#32;p1y);
<anchor xml:id="_util_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;o4&#32;=&#32;<link linkend="_util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68">orientation</link>(p2x,&#32;p2y,&#32;q2x,&#32;q2y,&#32;q1x,&#32;q1y);
<anchor xml:id="_util_8cpp_source_1l00023"/>00023 
<anchor xml:id="_util_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;standard&#32;case</emphasis>
<anchor xml:id="_util_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o1&#32;!=&#32;o2&#32;&amp;&amp;&#32;o3&#32;!=&#32;o4)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_util_8cpp_source_1l00026"/>00026 
<anchor xml:id="_util_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Edge&#32;cases</emphasis>
<anchor xml:id="_util_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;p1,&#32;q1,&#32;p2&#32;are&#32;collinear&#32;and&#32;p2&#32;lies&#32;on&#32;segment&#32;p1q1</emphasis>
<anchor xml:id="_util_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o1&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3">onSegment</link>(p1x,&#32;p1y,&#32;p2x,&#32;p2y,&#32;q1x,&#32;q1y))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_util_8cpp_source_1l00030"/>00030 
<anchor xml:id="_util_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;p1,&#32;q1,&#32;q2&#32;are&#32;collinear&#32;and&#32;q2&#32;lies&#32;on&#32;segment&#32;p1q1</emphasis>
<anchor xml:id="_util_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o2&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3">onSegment</link>(p1x,&#32;p1y,&#32;q2x,&#32;q2y,&#32;q1x,&#32;q1y))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_util_8cpp_source_1l00033"/>00033 
<anchor xml:id="_util_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;p2,&#32;q2,&#32;p1&#32;are&#32;collinear&#32;and&#32;p1&#32;lies&#32;on&#32;segment&#32;p2q2</emphasis>
<anchor xml:id="_util_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o3&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3">onSegment</link>(p2x,&#32;p2y,&#32;p1x,&#32;p1y,&#32;q2x,&#32;q2y))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_util_8cpp_source_1l00036"/>00036 
<anchor xml:id="_util_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;p2,&#32;q2,&#32;q1&#32;are&#32;collinear&#32;and&#32;q1&#32;lies&#32;on&#32;segment&#32;p2q2</emphasis>
<anchor xml:id="_util_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o4&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3">onSegment</link>(p2x,&#32;p2y,&#32;q1x,&#32;q1y,&#32;q2x,&#32;q2y))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_util_8cpp_source_1l00039"/>00039 
<anchor xml:id="_util_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;No&#32;doubleersection</emphasis>
<anchor xml:id="_util_8cpp_source_1l00041"/>00041 }
<anchor xml:id="_util_8cpp_source_1l00042"/>00042 
<anchor xml:id="_util_8cpp_source_1l00043"/>00043 
<anchor xml:id="_util_8cpp_source_1l00044"/>00044 
<anchor xml:id="_util_8cpp_source_1l00045"/>00045 
<anchor xml:id="_util_8cpp_source_1l00046"/><link linkend="_util_8cpp_1a913e3a56bee44293842c0d78d7e56634">00046</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_util_8cpp_1a913e3a56bee44293842c0d78d7e56634">lineIntersectsRectangle</link>(<emphasis role="keywordtype">double</emphasis>&#32;cx1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;cy1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;cx2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;cy2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;rx1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;ry1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;rx2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;ry2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;rx3,&#32;<emphasis role="keywordtype">double</emphasis>&#32;ry3,&#32;<emphasis role="keywordtype">double</emphasis>&#32;rx4,&#32;<emphasis role="keywordtype">double</emphasis>&#32;ry4)&#32;{
<anchor xml:id="_util_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;line&#32;intersects&#32;any&#32;of&#32;the&#32;rectangle&apos;s&#32;edges</emphasis>
<anchor xml:id="_util_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_util_8cpp_1a4e5e5d18b9bfa850378af284c05268df">doIntersect</link>(cx1,&#32;cy1,&#32;cx2,&#32;cy2,&#32;rx1,&#32;ry1,&#32;rx2,&#32;ry2)&#32;||&#32;<link linkend="_util_8cpp_1a4e5e5d18b9bfa850378af284c05268df">doIntersect</link>(cx1,&#32;cy1,&#32;cx2,&#32;cy2,&#32;rx2,&#32;ry2,&#32;rx3,&#32;ry3)&#32;||&#32;<link linkend="_util_8cpp_1a4e5e5d18b9bfa850378af284c05268df">doIntersect</link>(cx1,&#32;cy1,&#32;cx2,&#32;cy2,&#32;rx3,&#32;ry3,&#32;rx4,&#32;ry4)&#32;||&#32;<link linkend="_util_8cpp_1a4e5e5d18b9bfa850378af284c05268df">doIntersect</link>(cx1,&#32;cy1,&#32;cx2,&#32;cy2,&#32;rx4,&#32;ry4,&#32;rx1,&#32;ry1);
<anchor xml:id="_util_8cpp_source_1l00049"/>00049 }
<anchor xml:id="_util_8cpp_source_1l00050"/>00050 
</programlisting></section>
