<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="util_8cpp" kind="file" language="C++">
    <compoundname>util.cpp</compoundname>
    <includes refid="util_8hpp" local="yes">util.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/calebk/Documents/coding/RoombaController/src/util.cpp</label>
        <link refid="util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>util.hpp</label>
        <link refid="util_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double orientation</definition>
        <argsstring>(double px, double py, double qx, double qy, double rx, double ry)</argsstring>
        <name>orientation</name>
        <param>
          <type>double</type>
          <declname>px</declname>
        </param>
        <param>
          <type>double</type>
          <declname>py</declname>
        </param>
        <param>
          <type>double</type>
          <declname>qx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>qy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Created by Caleb Kugel 11/21/2024 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebk/Documents/coding/RoombaController/src/util.cpp" line="7" column="8" bodyfile="/home/calebk/Documents/coding/RoombaController/src/util.cpp" bodystart="7" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool onSegment</definition>
        <argsstring>(double px, double py, double qx, double qy, double rx, double ry)</argsstring>
        <name>onSegment</name>
        <param>
          <type>double</type>
          <declname>px</declname>
        </param>
        <param>
          <type>double</type>
          <declname>py</declname>
        </param>
        <param>
          <type>double</type>
          <declname>qx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>qy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebk/Documents/coding/RoombaController/src/util.cpp" line="13" column="6" bodyfile="/home/calebk/Documents/coding/RoombaController/src/util.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a4e5e5d18b9bfa850378af284c05268df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool doIntersect</definition>
        <argsstring>(double p1x, double p1y, double q1x, double q1y, double p2x, double p2y, double q2x, double q2y)</argsstring>
        <name>doIntersect</name>
        <param>
          <type>double</type>
          <declname>p1x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p1y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q1x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q1y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p2x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p2y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q2x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>q2y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebk/Documents/coding/RoombaController/src/util.cpp" line="18" column="6" bodyfile="/home/calebk/Documents/coding/RoombaController/src/util.cpp" bodystart="18" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="util_8cpp_1a913e3a56bee44293842c0d78d7e56634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lineIntersectsRectangle</definition>
        <argsstring>(double cx1, double cy1, double cx2, double cy2, double rx1, double ry1, double rx2, double ry2, double rx3, double ry3, double rx4, double ry4)</argsstring>
        <name>lineIntersectsRectangle</name>
        <param>
          <type>double</type>
          <declname>cx1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cy1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cx2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cy2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rx1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ry1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rx2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ry2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rx3</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ry3</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rx4</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ry4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebk/Documents/coding/RoombaController/src/util.cpp" line="46" column="6" bodyfile="/home/calebk/Documents/coding/RoombaController/src/util.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8hpp" kindref="compound">util.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68" kindref="member">orientation</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>(qy<sp/>-<sp/>py)<sp/>*<sp/>(rx<sp/>-<sp/>qx)<sp/>-<sp/>(qx<sp/>-<sp/>px)<sp/>*<sp/>(ry<sp/>-<sp/>qy);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(val)<sp/>&lt;<sp/>0.1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>collinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>clockwise<sp/>or<sp/>counterclockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3" kindref="member">onSegment</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qx<sp/>&lt;=<sp/>(px<sp/>&gt;<sp/>rx<sp/>?<sp/>px<sp/>:<sp/>rx)<sp/>&amp;&amp;<sp/>qx<sp/>&gt;=<sp/>(px<sp/>&lt;<sp/>rx<sp/>?<sp/>px<sp/>:<sp/>rx)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qy<sp/>&lt;=<sp/>(py<sp/>&gt;<sp/>ry<sp/>?<sp/>py<sp/>:<sp/>ry)<sp/>&amp;&amp;<sp/>qy<sp/>&gt;=<sp/>(py<sp/>&lt;<sp/>ry<sp/>?<sp/>py<sp/>:<sp/>ry);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="util_8cpp_1a4e5e5d18b9bfa850378af284c05268df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a4e5e5d18b9bfa850378af284c05268df" kindref="member">doIntersect</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2y)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>o1<sp/>=<sp/><ref refid="util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68" kindref="member">orientation</ref>(p1x,<sp/>p1y,<sp/>q1x,<sp/>q1y,<sp/>p2x,<sp/>p2y);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>o2<sp/>=<sp/><ref refid="util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68" kindref="member">orientation</ref>(p1x,<sp/>p1y,<sp/>q1x,<sp/>q1y,<sp/>q2x,<sp/>q2y);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>o3<sp/>=<sp/><ref refid="util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68" kindref="member">orientation</ref>(p2x,<sp/>p2y,<sp/>q2x,<sp/>q2y,<sp/>p1x,<sp/>p1y);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>o4<sp/>=<sp/><ref refid="util_8cpp_1a949a93aaf5bad798848b1d6ff4bd7b68" kindref="member">orientation</ref>(p2x,<sp/>p2y,<sp/>q2x,<sp/>q2y,<sp/>q1x,<sp/>q1y);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>standard<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o1<sp/>!=<sp/>o2<sp/>&amp;&amp;<sp/>o3<sp/>!=<sp/>o4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Edge<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p1,<sp/>q1,<sp/>p2<sp/>are<sp/>collinear<sp/>and<sp/>p2<sp/>lies<sp/>on<sp/>segment<sp/>p1q1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3" kindref="member">onSegment</ref>(p1x,<sp/>p1y,<sp/>p2x,<sp/>p2y,<sp/>q1x,<sp/>q1y))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p1,<sp/>q1,<sp/>q2<sp/>are<sp/>collinear<sp/>and<sp/>q2<sp/>lies<sp/>on<sp/>segment<sp/>p1q1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o2<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3" kindref="member">onSegment</ref>(p1x,<sp/>p1y,<sp/>q2x,<sp/>q2y,<sp/>q1x,<sp/>q1y))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p2,<sp/>q2,<sp/>p1<sp/>are<sp/>collinear<sp/>and<sp/>p1<sp/>lies<sp/>on<sp/>segment<sp/>p2q2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o3<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3" kindref="member">onSegment</ref>(p2x,<sp/>p2y,<sp/>p1x,<sp/>p1y,<sp/>q2x,<sp/>q2y))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p2,<sp/>q2,<sp/>q1<sp/>are<sp/>collinear<sp/>and<sp/>q1<sp/>lies<sp/>on<sp/>segment<sp/>p2q2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o4<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="util_8cpp_1aec2e0e6da52a6460459ffefa1bad0fd3" kindref="member">onSegment</ref>(p2x,<sp/>p2y,<sp/>q1x,<sp/>q1y,<sp/>q2x,<sp/>q2y))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>doubleersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="util_8cpp_1a913e3a56bee44293842c0d78d7e56634" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a913e3a56bee44293842c0d78d7e56634" kindref="member">lineIntersectsRectangle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cx1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cy1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cx2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cy2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx3,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry3,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx4,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry4)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>line<sp/>intersects<sp/>any<sp/>of<sp/>the<sp/>rectangle&apos;s<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="util_8cpp_1a4e5e5d18b9bfa850378af284c05268df" kindref="member">doIntersect</ref>(cx1,<sp/>cy1,<sp/>cx2,<sp/>cy2,<sp/>rx1,<sp/>ry1,<sp/>rx2,<sp/>ry2)<sp/>||<sp/><ref refid="util_8cpp_1a4e5e5d18b9bfa850378af284c05268df" kindref="member">doIntersect</ref>(cx1,<sp/>cy1,<sp/>cx2,<sp/>cy2,<sp/>rx2,<sp/>ry2,<sp/>rx3,<sp/>ry3)<sp/>||<sp/><ref refid="util_8cpp_1a4e5e5d18b9bfa850378af284c05268df" kindref="member">doIntersect</ref>(cx1,<sp/>cy1,<sp/>cx2,<sp/>cy2,<sp/>rx3,<sp/>ry3,<sp/>rx4,<sp/>ry4)<sp/>||<sp/><ref refid="util_8cpp_1a4e5e5d18b9bfa850378af284c05268df" kindref="member">doIntersect</ref>(cx1,<sp/>cy1,<sp/>cx2,<sp/>cy2,<sp/>rx4,<sp/>ry4,<sp/>rx1,<sp/>ry1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/calebk/Documents/coding/RoombaController/src/util.cpp"/>
  </compounddef>
</doxygen>
