<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="Hole_8cpp" kind="file" language="C++">
    <compoundname>Hole.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="Hole_8hpp" local="yes">Hole.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/calebk/Documents/coding/RoombaController/src/Hole.cpp</label>
        <link refid="Hole_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Hole.hpp</label>
        <link refid="Hole_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Pose2D.hpp</label>
        <link refid="Pose2D_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="10">
        <label>ostream</label>
      </node>
      <node id="9">
        <label>sstream</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="Hole_8cpp_1a371c0f905489a21d9276bb383a572487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Hole &amp;hole)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classHole" kindref="compound">Hole</ref> &amp;</type>
          <declname>hole</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override output stream for printing <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hole</parametername>
</parameternamelist>
<parameterdescription>
<para>the hole to print </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hole printed in the out stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebk/Documents/coding/RoombaController/src/Hole.cpp" line="373" column="1" bodyfile="/home/calebk/Documents/coding/RoombaController/src/Hole.cpp" bodystart="373" bodyend="379"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Hole_8hpp" kindref="compound">Hole.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classHole_1a079e74ec763052a10fedea61a6a5088b" refkind="member"><highlight class="normal"><ref refid="classHole_1a90b129019613cc439b9834058f8727b1" kindref="member">Hole::Hole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>positionOne,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>positionTwo,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>holeSize)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>o1<sp/>=<sp/>positionOne.<ref refid="classPose2D_1a34c15f20448e7efd354c507d38ec2891" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>o2<sp/>=<sp/>positionTwo.<ref refid="classPose2D_1a34c15f20448e7efd354c507d38ec2891" kindref="member">clone</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>o1.<ref refid="classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3" kindref="member">distanceTo</ref>(o2)<sp/>/<sp/>sqrt(2);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;holeSize<sp/>=<sp/>holeSize;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classHole_1adc6df39c2118fd21749786927800de4b" kindref="member">registerPointsToHole</ref>(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pointHoles<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classHole_1a653b2d43ddca456e31c6be921d7077df" refkind="member"><highlight class="normal"><ref refid="classHole_1a90b129019613cc439b9834058f8727b1" kindref="member">Hole::Hole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>positionOne,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>positionTwo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundHole,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Pose2D&gt;&amp;<sp/>points,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>holeSize)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>positionOne.<ref refid="classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3" kindref="member">distanceTo</ref>(positionTwo)<sp/>/<sp/>sqrt(2);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundHole)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classHole_1adc6df39c2118fd21749786927800de4b" kindref="member">registerPointsToHole</ref>(positionOne,<sp/>positionTwo);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;foundHole<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>point<sp/>:<sp/>points)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;points-&gt;push_back(point);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pointHoles<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classHole_1a1b9d48a850759ae1b826b7476c304785" refkind="member"><highlight class="normal"><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/><ref refid="classHole_1a1b9d48a850759ae1b826b7476c304785" kindref="member">Hole::getOneSquareCorner</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cornerOne;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classHole_1ae5ba1de89591495ee62c784c8bcc4b72" refkind="member"><highlight class="normal"><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/><ref refid="classHole_1ae5ba1de89591495ee62c784c8bcc4b72" kindref="member">Hole::getSecondSquareCorner</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cornerTwo;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classHole_1ad224d20fbe2037b97e19344b8f0157e0" refkind="member"><highlight class="normal"><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/><ref refid="classHole_1ad224d20fbe2037b97e19344b8f0157e0" kindref="member">Hole::copyDoOperation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>position)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>center(this-&gt;cornerOne);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>center.<ref refid="classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51" kindref="member">setHeading</ref>(center.<ref refid="classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773" kindref="member">angleTo</ref>(this-&gt;cornerTwo));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>center.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(center.<ref refid="classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3" kindref="member">distanceTo</ref>(this-&gt;cornerTwo)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>pos(position);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>pos.<ref refid="classPose2D_1adc44dfc82549ea97d3622052b615bf55" kindref="member">minus</ref>(center);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pos.<ref refid="classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61" kindref="member">rotateByAngle</ref>(phi);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>pos.<ref refid="classPose2D_1a5a031312210c5fd0d88855df26b53c1a" kindref="member">plus</ref>(<ref refid="classPose2D" kindref="compound">Pose2D</ref>(x_translation_two,<sp/>y_translation_two));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classHole_1a519b0f73c960b116403ee937a8fb0a3e" refkind="member"><highlight class="normal">std::vector&lt;Pose2D&gt;<sp/><ref refid="classHole_1a519b0f73c960b116403ee937a8fb0a3e" kindref="member">Hole::getSuggestedNodePlacements</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>nodes<sp/>that<sp/>we<sp/>will<sp/>generate<sp/>will<sp/>be<sp/>around<sp/>the<sp/>hole,<sp/>One<sp/>hole<sp/>length<sp/>*<sp/>1.5<sp/>45<sp/>degrees<sp/>offset<sp/>to<sp/>each<sp/>corner<sp/>from<sp/>the<sp/>center<sp/>of<sp/>the<sp/>hole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Pose2D&gt;<sp/>toReturn;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;foundHole)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>center(this-&gt;cornerOne);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>center.<ref refid="classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51" kindref="member">setHeading</ref>(center.<ref refid="classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773" kindref="member">angleTo</ref>(this-&gt;cornerTwo));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>temp(center);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>magnitude<sp/>=<sp/><ref refid="Hole_8hpp_1a657e122f8983d0a993ee0266696f1984" kindref="member">HOLE_SIZE</ref><sp/>*<sp/>1.5;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>toAdd(temp);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toAdd.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(magnitude);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toReturn.push_back(toAdd);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="classPose2D_1a77b5a2d38fe501e59a8d308b5cfa0508" kindref="member">addAngle</ref>(M_PI<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;points-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>suggested(this-&gt;points-&gt;at(i));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suggested.<ref refid="classPose2D_1a77b5a2d38fe501e59a8d308b5cfa0508" kindref="member">addAngle</ref>(M_PI);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suggested.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(<ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toReturn.push_back(suggested);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toReturn;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classHole_1afd4c5c949e5c37e58ff10927e475fcdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHole_1afd4c5c949e5c37e58ff10927e475fcdf" kindref="member">Hole::isInSquare</ref>(<ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>position)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;starting<sp/>position:<sp/>&quot;<sp/>&lt;&lt;<sp/>position<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>general<sp/>idea:<sp/>we<sp/>use<sp/>the<sp/>operations<sp/>in<sp/>the<sp/>object<sp/>to<sp/>translate<sp/>objects<sp/>for<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>pos<sp/>=<sp/><ref refid="classHole_1ad224d20fbe2037b97e19344b8f0157e0" kindref="member">copyDoOperation</ref>(position);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;translated<sp/>position:<sp/>&quot;<sp/>&lt;&lt;<sp/>pos<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>-<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>-<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>+<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>+<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>+<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>+<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>-<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pos.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>-<sp/><ref refid="Pose2D_8hpp_1aa214e157b90ee2b54649c3bb808b4d60" kindref="member">BOT_RADIUS</ref><sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classHole_1a4ea8b237954a3decf415e384b042eacd" refkind="member"><highlight class="normal"><ref refid="classHole_1a90b129019613cc439b9834058f8727b1" kindref="member">Hole::Hole</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>X1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>X2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Y2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>holeSize)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>o1(X1,<sp/>Y1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>o2(X2,<sp/>Y2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;threshold<sp/>=<sp/>o1.<ref refid="classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3" kindref="member">distanceTo</ref>(o2)<sp/>/<sp/>sqrt(2);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;holeSize<sp/>=<sp/>holeSize;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHole_1adc6df39c2118fd21749786927800de4b" kindref="member">registerPointsToHole</ref>(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pointHoles<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classHole_1a90b129019613cc439b9834058f8727b1" refkind="member"><highlight class="normal"><ref refid="classHole_1a90b129019613cc439b9834058f8727b1" kindref="member">Hole::Hole</ref>()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;holeSize<sp/>=<sp/><ref refid="Hole_8hpp_1a657e122f8983d0a993ee0266696f1984" kindref="member">HOLE_SIZE</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;threshold<sp/>=<sp/><ref refid="Hole_8hpp_1a657e122f8983d0a993ee0266696f1984" kindref="member">HOLE_SIZE</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;foundHole<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pointHoles<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classHole_1a6c5cc5e4efbe73711dab187e00a0a171" refkind="member"><highlight class="normal"><ref refid="classHole_1a90b129019613cc439b9834058f8727b1" kindref="member">Hole::Hole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>initialPoint,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>holeSize)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;foundHole<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points-&gt;push_back(initialPoint);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pointHoles<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;holeSize<sp/>=<sp/>holeSize;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;threshold<sp/>=<sp/>holeSize;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classHole_1afb912f0b7b58f2074fcbbc50184e39c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHole_1afb912f0b7b58f2074fcbbc50184e39c2" kindref="member">Hole::pointCouldBeMemberOfHole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>measurment)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>point<sp/>:<sp/>*this-&gt;points)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(point.distanceTo(measurment)<sp/>&gt;<sp/>holeSize<sp/>*<sp/>std::sqrt(2))<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classHole_1a4ddff9cebed0fa967b3a8ea12aac1195" refkind="member"><highlight class="normal"><ref refid="classHole_1a90b129019613cc439b9834058f8727b1" kindref="member">Hole::Hole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classHole" kindref="compound">Hole</ref>&amp;<sp/>hole)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cornerOne<sp/>=<sp/>hole.cornerOne;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cornerTwo<sp/>=<sp/>hole.cornerTwo;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;foundHole<sp/>=<sp/>hole.foundHole;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;phi<sp/>=<sp/>hole.phi;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;threshold<sp/>=<sp/>hole.threshold;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;x_translation_one<sp/>=<sp/>hole.x_translation_one;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;y_translation_one<sp/>=<sp/>hole.y_translation_one;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;x_translation_two<sp/>=<sp/>hole.x_translation_two;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;y_translation_two<sp/>=<sp/>hole.y_translation_two;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;holeSize<sp/>=<sp/>hole.holeSize;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hole.points-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;points-&gt;push_back(hole.points-&gt;data()[i]);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pointHoles<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hole.pointHoles-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pointHoles-&gt;push_back(hole.pointHoles-&gt;data()[i]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classHole_1a39673dc613c45644ff844c7b81709ab9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHole_1a39673dc613c45644ff844c7b81709ab9" kindref="member">Hole::addPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points-&gt;push_back(position);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//General<sp/>flow:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;points-&gt;size()<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>3<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pick<sp/>2<sp/>with<sp/>close<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>index<sp/>of<sp/>the<sp/>pivot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>perpendicularPosition;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>parallelOne;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>parallelTwo;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positions<sp/>one<sp/>and<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;points-&gt;at(0).getHeading()<sp/>-<sp/>this-&gt;points-&gt;at(1).getHeading())<sp/>&lt;<sp/>M_PI<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yay<sp/>we<sp/>have<sp/>our<sp/>parallel<sp/>par<sp/>of<sp/>one<sp/>and<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpendicularPosition<sp/>=<sp/>this-&gt;points-&gt;at(2);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne<sp/>=<sp/>this-&gt;points-&gt;at(0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelTwo<sp/>=<sp/>this-&gt;points-&gt;at(1);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>positions<sp/>two<sp/>and<sp/>three</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;points-&gt;at(1).getHeading()<sp/>-<sp/>this-&gt;points-&gt;at(2).getHeading())<sp/>&lt;<sp/>M_PI<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yay<sp/>we<sp/>know<sp/>our<sp/>parallel<sp/>pair<sp/>are<sp/>two<sp/>and<sp/>three</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpendicularPosition<sp/>=<sp/>this-&gt;points-&gt;at(0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne<sp/>=<sp/>this-&gt;points-&gt;at(1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelTwo<sp/>=<sp/>this-&gt;points-&gt;at(2);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>positions<sp/>one<sp/>and<sp/>three</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;points-&gt;at(0).getHeading()<sp/>-<sp/>this-&gt;points-&gt;at(2).getHeading())<sp/>&lt;<sp/>M_PI<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>our<sp/>parallel<sp/>pair<sp/>of<sp/>1<sp/>and<sp/>three</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpendicularPosition<sp/>=<sp/>this-&gt;points-&gt;at(1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne<sp/>=<sp/>this-&gt;points-&gt;at(0);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelTwo<sp/>=<sp/>this-&gt;points-&gt;at(2);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parallelOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&gt;<sp/>parallelTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>())<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>temp<sp/>=<sp/>parallelOne;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne<sp/>=<sp/>parallelTwo;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelTwo<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>none<sp/>of<sp/>the<sp/>angles<sp/>are<sp/>similiar<sp/>so<sp/>we<sp/>know<sp/>that<sp/>we<sp/>have<sp/>three<sp/>measurmenets<sp/>from<sp/>all<sp/>different<sp/>edges<sp/>of<sp/>the<sp/>square</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>two<sp/>similiar<sp/>angles<sp/>when<sp/>turned<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pose<sp/>1<sp/>and<sp/>2<sp/>are<sp/>out<sp/>of<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;points-&gt;at(0).getHeading()<sp/>+<sp/>this-&gt;points-&gt;at(1).getHeading())<sp/>&lt;<sp/>0.1<sp/>||<sp/>fabs(fabs(this-&gt;points-&gt;at(0).getHeading())<sp/>-<sp/>fabs(this-&gt;points-&gt;at(1).getHeading()))<sp/>&lt;<sp/>0.1)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne<sp/>=<sp/>this-&gt;points-&gt;at(0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(holeSize);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelTwo<sp/>=<sp/>this-&gt;points-&gt;at(1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpendicularPosition<sp/>=<sp/>this-&gt;points-&gt;at(2);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pose<sp/>2<sp/>and<sp/>three<sp/>are<sp/>out<sp/>of<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;points-&gt;at(2).getHeading()<sp/>+<sp/>this-&gt;points-&gt;at(1).getHeading())<sp/>&lt;<sp/>0.1<sp/>||<sp/>fabs(fabs(this-&gt;points-&gt;at(2).getHeading())<sp/>-<sp/>fabs(this-&gt;points-&gt;at(1).getHeading()))<sp/>&lt;<sp/>0.1)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne<sp/>=<sp/>this-&gt;points-&gt;at(2);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(holeSize);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelTwo<sp/>=<sp/>this-&gt;points-&gt;at(1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpendicularPosition<sp/>=<sp/>this-&gt;points-&gt;at(0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pose<sp/>3<sp/>and<sp/>1<sp/>are<sp/>out<sp/>of<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;points-&gt;at(0).getHeading()<sp/>+<sp/>this-&gt;points-&gt;at(2).getHeading())<sp/>&lt;<sp/>0.1<sp/>||<sp/>fabs(fabs(this-&gt;points-&gt;at(0).getHeading())<sp/>-<sp/>fabs(this-&gt;points-&gt;at(2).getHeading()))<sp/>&lt;<sp/>0.1)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne<sp/>=<sp/>this-&gt;points-&gt;at(0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelOne.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(holeSize);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelTwo<sp/>=<sp/>this-&gt;points-&gt;at(2);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpendicularPosition<sp/>=<sp/>this-&gt;points-&gt;at(1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i&apos;m<sp/>not<sp/>sure<sp/>how<sp/>we<sp/>got<sp/>here<sp/>and<sp/>I&apos;<sp/>m<sp/>just<sp/>gonna<sp/>clear<sp/>the<sp/>entire<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;points-&gt;clear();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>cornerOne;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>oppositeCorner;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>to<sp/>make<sp/>the<sp/>cirtical<sp/>points<sp/>from<sp/>the<sp/>two<sp/>parallel<sp/>lines<sp/>and<sp/>the<sp/>perpendicular<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>(parallelTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>-<sp/>parallelOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>(parallelTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>-<sp/>parallelOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(dx)<sp/>&lt;<sp/>0.01)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertical<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xCornerOne<sp/>=<sp/>parallelOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yCornerOne<sp/>=<sp/>perpendicularPosition.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerOne<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(xCornerOne,<sp/>yCornerOne);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(cornerOne);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner.<ref refid="classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51" kindref="member">setHeading</ref>((cornerOne.<ref refid="classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773" kindref="member">angleTo</ref>(parallelOne)<sp/>+<sp/>cornerOne.<ref refid="classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773" kindref="member">angleTo</ref>(parallelTwo))<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(holeSize<sp/>*<sp/>sqrt(2));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(dy)<sp/>&lt;<sp/>0.01)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xCornerOne<sp/>=<sp/>perpendicularPosition.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yCornerOne<sp/>=<sp/>parallelOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerOne<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(xCornerOne,<sp/>yCornerOne);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(cornerOne);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner.<ref refid="classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51" kindref="member">setHeading</ref>((parallelOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>+<sp/>perpendicularPosition.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(holeSize<sp/>*<sp/>sqrt(2));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1<sp/>=<sp/>(parallelTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>-<sp/>parallelOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>())<sp/>/<sp/>dx;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1<sp/>=<sp/>-<sp/>m1<sp/>*<sp/>parallelOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>+<sp/>parallelOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2<sp/>=<sp/>-<sp/>1<sp/>/<sp/>m1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2<sp/>=<sp/>-m2<sp/>*<sp/>perpendicularPosition.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>+<sp/>perpendicularPosition.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xIntersection<sp/>=<sp/>(1<sp/>/<sp/>m1<sp/>+<sp/>m1)<sp/>/<sp/>(b2<sp/>-<sp/>b1);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yIntersection<sp/>=<sp/>xIntersection<sp/>*<sp/>m1<sp/>+<sp/>b1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerOne<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(xIntersection,<sp/>yIntersection);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>favorite<sp/>very<sp/>dumb<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleToOther<sp/>=<sp/>(cornerOne.<ref refid="classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773" kindref="member">angleTo</ref>(parallelOne)<sp/>+<sp/>cornerOne.<ref refid="classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773" kindref="member">angleTo</ref>(perpendicularPosition))<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(cornerOne);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner.<ref refid="classPose2D_1a07d03a1b06734fa63fcf6ee05befcb51" kindref="member">setHeading</ref>(angleToOther);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oppositeCorner.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(holeSize<sp/>*<sp/>sqrt(2));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cornerOne<sp/>=<sp/>cornerOne;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cornerTwo<sp/>=<sp/>oppositeCorner;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;foundHole<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!foundHole)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>cornerOneNew(position);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerOneNew.<ref refid="classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61" kindref="member">rotateByAngle</ref>(M_PI<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerOneNew.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(2);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>cornerTwoNew(position);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>astute<sp/>reader<sp/>will<sp/>notice<sp/>that<sp/>this<sp/>is<sp/>really<sp/>stupid<sp/>and<sp/>that<sp/>there<sp/>is<sp/>a<sp/>relatively<sp/>simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>math<sp/>to<sp/>accomplish<sp/>this<sp/>goal<sp/>in<sp/>one<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>however<sp/>I<sp/>am<sp/>stupid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerTwoNew.<ref refid="classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61" kindref="member">rotateByAngle</ref>(-M_PI<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerTwoNew.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(2);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerTwoNew.<ref refid="classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61" kindref="member">rotateByAngle</ref>(M_PI<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cornerTwoNew.<ref refid="classPose2D_1a84216b76ce7d5a554794b43c56574582" kindref="member">translateByMagnitude</ref>(4);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHole" kindref="compound">Hole</ref><sp/>hole(cornerOneNew,<sp/>cornerTwoNew,<sp/>4);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pointHoles-&gt;push_back(hole);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classHole_1adc6df39c2118fd21749786927800de4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHole_1adc6df39c2118fd21749786927800de4b" kindref="member">Hole::registerPointsToHole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>positionOne,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>positionTwo)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>first<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>cornerOne<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(positionOne);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>cornerTwo<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(positionTwo);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>D(positionOne);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>foundHole<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrong<sp/>should<sp/>be<sp/>center<sp/>x<sp/>and<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>center(positionOne);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>center.<ref refid="classPose2D_1aae96b589dd219d641a039b8fe1a56d7b" kindref="member">vecAdd</ref>(center.<ref refid="classPose2D_1a29526d1eb9c2eafc4b6d3cc2f31a6773" kindref="member">angleTo</ref>(positionTwo),<sp/>center.<ref refid="classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3" kindref="member">distanceTo</ref>(positionTwo)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>x_translation_one<sp/>=<sp/>-center.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>y_translation_one<sp/>=<sp/>-center.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>D.<ref refid="classPose2D_1a5a031312210c5fd0d88855df26b53c1a" kindref="member">plus</ref>(<ref refid="classPose2D" kindref="compound">Pose2D</ref>(x_translation_one,<sp/>y_translation_one));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(D.<ref refid="classPose2D_1aa5f78e433ba60f61ea49b08ec8ff4d08" kindref="member">getQuadrant</ref>())<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(D.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>())<sp/>&lt;<sp/>0.01)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>y<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>-<sp/>M_PI<sp/>/<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>just<sp/>a<sp/>nudge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>M_PI<sp/>/<sp/>4<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>x<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>-M_PI<sp/>/<sp/>4<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>M_PI<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>M_PI;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>M_PI<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>-M_PI<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>D.<ref refid="classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61" kindref="member">rotateByAngle</ref>(phi);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newAngle<sp/>=<sp/>M_PI<sp/>/<sp/>4<sp/>-<sp/>atan2(-D.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>(),<sp/>-D.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>());<sp/></highlight><highlight class="comment">//<sp/>see<sp/>desmos<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>D.<ref refid="classPose2D_1a1e220c70ada1586e8e1f9f2387e45e61" kindref="member">rotateByAngle</ref>(newAngle);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>newAngle;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;phi<sp/>=<sp/>phi;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>position<sp/>one<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>x_translation_two<sp/>=<sp/>-D.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>y_translation_two<sp/>=<sp/>-D.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>cornerOne.<ref refid="classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3" kindref="member">distanceTo</ref>(cornerTwo)<sp/>/<sp/>sqrt(2);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*std::cout<sp/>&lt;&lt;<sp/>&quot;x<sp/>translation:<sp/>&quot;<sp/>&lt;&lt;<sp/>x_translation_one<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>&quot;y<sp/>translation:<sp/>&quot;<sp/>&lt;&lt;<sp/>y_translation_one<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;angleTurn:<sp/>&quot;<sp/>&lt;&lt;<sp/>phi<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>&quot;x<sp/>translation<sp/>2:<sp/>&quot;<sp/>&lt;&lt;<sp/>x_translation_two<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>&quot;y_translation:<sp/>&quot;<sp/>&lt;&lt;<sp/>y_translation_two<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;threshold:<sp/>&quot;<sp/>&lt;&lt;<sp/>threshold<sp/>&lt;&lt;<sp/>std::endl;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classHole_1a371c0f905489a21d9276bb383a572487" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="Hole_8cpp_1a371c0f905489a21d9276bb383a572487" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classHole" kindref="compound">Hole</ref><sp/>&amp;hole)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cornerOne:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.cornerOne<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cornerTwo:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.cornerTwo<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>threshold:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.threshold<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>phi:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.phi</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>x_translation_one:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.x_translation_one<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>y_translation_one:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.y_translation_one</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>x_translation_two:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.x_translation_two<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>y_translation_two:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.y_translation_two</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>foundHole:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.foundHole<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>points:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hole.points;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classHole_1a73735b03496aad26f53879b2c50fcc71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHole_1a73735b03496aad26f53879b2c50fcc71" kindref="member">Hole::offset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundHole)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cornerOne.<ref refid="classPose2D_1a5a031312210c5fd0d88855df26b53c1a" kindref="member">plus</ref>(<ref refid="classHole_1a73735b03496aad26f53879b2c50fcc71" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cornerTwo.<ref refid="classPose2D_1a5a031312210c5fd0d88855df26b53c1a" kindref="member">plus</ref>(<ref refid="classHole_1a73735b03496aad26f53879b2c50fcc71" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHole_1adc6df39c2118fd21749786927800de4b" kindref="member">registerPointsToHole</ref>(cornerOne,<sp/>cornerTwo);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;points-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;points-&gt;at(i).plus(<ref refid="classHole_1a73735b03496aad26f53879b2c50fcc71" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pointHoles-&gt;at(i).offset(<ref refid="classHole_1a73735b03496aad26f53879b2c50fcc71" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classHole_1ae7c69bf5e1d37a1230b50187e7442506" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHole_1ae7c69bf5e1d37a1230b50187e7442506" kindref="member">Hole::lineIntersectsHole</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>posOne,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>&amp;<sp/>posTwo)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundHole)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>positionOne;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref><sp/>positionTwo;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&lt;<sp/>posTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>())<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positionOne<sp/>=<sp/><ref refid="classHole_1ad224d20fbe2037b97e19344b8f0157e0" kindref="member">copyDoOperation</ref>(posOne);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positionTwo<sp/>=<sp/><ref refid="classHole_1ad224d20fbe2037b97e19344b8f0157e0" kindref="member">copyDoOperation</ref>(posTwo);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positionOne<sp/>=<sp/><ref refid="classHole_1ad224d20fbe2037b97e19344b8f0157e0" kindref="member">copyDoOperation</ref>(posTwo);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positionTwo<sp/>=<sp/><ref refid="classHole_1ad224d20fbe2037b97e19344b8f0157e0" kindref="member">copyDoOperation</ref>(posOne);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>line<sp/>between<sp/>them,<sp/>at<sp/>any<sp/>point<sp/>falls<sp/>between<sp/>0<sp/>and<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>annoyingly<sp/>I<sp/>think<sp/>this<sp/>means<sp/>that<sp/>we<sp/>need<sp/>to<sp/>do<sp/>real<sp/>math<sp/>(ew)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>-<sp/>positionTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>())<sp/>&lt;<sp/>0.05)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>a<sp/>vertical<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>vertical<sp/>line<sp/>starts<sp/>below<sp/>0<sp/>and<sp/>ends<sp/>after<sp/>threshold<sp/>and<sp/>X<sp/>is<sp/>between<sp/>0<sp/>and<sp/>threshold<sp/>then<sp/>it<sp/>intersects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&lt;<sp/>threshold)<sp/>||</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(positionTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>positionTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>&lt;<sp/>threshold))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmax(positionOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>(),<sp/>positionTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>())<sp/>&gt;<sp/>threshold<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmin(positionOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>(),<sp/>positionTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>())<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(positionOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>-<sp/>positionTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>())<sp/>&lt;<sp/>0.05)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>a<sp/>horizontal<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((positionOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>positionOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&lt;<sp/>threshold)<sp/>||</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(positionTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>positionTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>&lt;<sp/>threshold))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmax(positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>(),<sp/>positionTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>())<sp/>&gt;<sp/>threshold<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmin(positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>(),<sp/>positionTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>())<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>gotta<sp/>make<sp/>a<sp/>line,<sp/>which<sp/>we<sp/>can<sp/>guranteed<sp/>will<sp/>exist<sp/>without<sp/>a<sp/>slope<sp/>of<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>(positionTwo.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>-<sp/>positionOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>())<sp/>/<sp/>(positionTwo.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>-<sp/>positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>positionOne.<ref refid="classPose2D_1acfc52591b36947d8ead57ada1c12e5c2" kindref="member">getY</ref>()<sp/>-<sp/>(positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>*<sp/>m);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>that<sp/>we<sp/>know<sp/>the<sp/>equation<sp/>of<sp/>the<sp/>line<sp/>we<sp/>can<sp/>determine<sp/>if<sp/>it<sp/>intersects<sp/>the<sp/>x<sp/>axis,<sp/>y<sp/>axis,<sp/>or<sp/>y<sp/>=<sp/>threshold<sp/>or<sp/>x<sp/>=<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yayyyy<sp/>finding<sp/>0&apos;s<sp/>of<sp/>a<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2Check<sp/>=<sp/>m<sp/>*<sp/>positionOne.<ref refid="classPose2D_1ad3453560b394884b5b94de1264b946fa" kindref="member">getX</ref>()<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((b<sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>b<sp/>&gt;<sp/>0)<sp/>||<sp/>(y2Check<sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>y2Check<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>we<sp/>intersect<sp/>with<sp/>the<sp/>x<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValueAtYIsZero<sp/>=<sp/>(-b<sp/>/<sp/>m);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValueATYIsThreshold<sp/>=<sp/>(threshold<sp/>-<sp/>b)<sp/>/<sp/>m;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(xValueAtYIsZero<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>xValueAtYIsZero<sp/>&lt;<sp/>threshold)<sp/>||</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xValueATYIsThreshold<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>xValueATYIsThreshold<sp/>&lt;<sp/>threshold);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;pointHoles-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pointHoles-&gt;at(i).lineIntersectsHole(posOne,<sp/>posTwo))<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="classHole_1ac73d25f280d747ba04a6e9b90d587d94" refkind="member"><highlight class="normal"><ref refid="classHole_1a90b129019613cc439b9834058f8727b1" kindref="member">Hole::Hole</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cornerOne<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(x1,<sp/>y1);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cornerTwo<sp/>=<sp/><ref refid="classPose2D" kindref="compound">Pose2D</ref>(x2,<sp/>y2);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;points<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Pose2D&gt;&gt;();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pointHoles<sp/>=<sp/>std::make_unique&lt;std::vector&lt;Hole&gt;&gt;();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;holeSize<sp/>=<sp/>cornerOne.<ref refid="classPose2D_1a9acb14a9b0252c620dfc1e79139b52d3" kindref="member">distanceTo</ref>(cornerTwo)<sp/>/<sp/>sqrt(2);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHole_1adc6df39c2118fd21749786927800de4b" kindref="member">registerPointsToHole</ref>(cornerOne,<sp/>cornerTwo);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="classHole_1a863918993a62cc90b99a66c48e9e0bdc" refkind="member"><highlight class="normal">std::vector&lt;Hole&gt;<sp/><ref refid="classHole_1a863918993a62cc90b99a66c48e9e0bdc" kindref="member">Hole::getSubHolesCopy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Hole&gt;<sp/>toReturn;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;pointHoles-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toReturn.push_back(this-&gt;pointHoles-&gt;at(i));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toReturn;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/calebk/Documents/coding/RoombaController/src/Hole.cpp"/>
  </compounddef>
</doxygen>
