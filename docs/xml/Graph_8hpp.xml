<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="Graph_8hpp" kind="file" language="C++">
    <compoundname>Graph.hpp</compoundname>
    <includes refid="Node_8hpp" local="yes">Node.hpp</includes>
    <includes refid="Pose2D_8hpp" local="yes">Pose2D.hpp</includes>
    <includes local="no">stack</includes>
    <includes local="yes">vector</includes>
    <includes local="yes">map</includes>
    <includedby refid="Field_8hpp" local="yes">/home/calebk/Documents/coding/RoombaController/src/Field.hpp</includedby>
    <includedby refid="Graph_8cpp" local="yes">/home/calebk/Documents/coding/RoombaController/src/Graph.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/calebk/Documents/coding/RoombaController/src/Graph.hpp</label>
        <link refid="Graph_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Node.cpp</label>
        <link refid="Node_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Node.hpp</label>
        <link refid="Node_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Pose2D.hpp</label>
        <link refid="Pose2D_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="7">
        <label>ostream</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>stack</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/calebk/Documents/coding/RoombaController/src/Field.cpp</label>
        <link refid="Field_8cpp"/>
      </node>
      <node id="2">
        <label>/home/calebk/Documents/coding/RoombaController/src/Field.hpp</label>
        <link refid="Field_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/calebk/Documents/coding/RoombaController/src/Graph.cpp</label>
        <link refid="Graph_8cpp"/>
      </node>
      <node id="1">
        <label>/home/calebk/Documents/coding/RoombaController/src/Graph.hpp</label>
        <link refid="Graph_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/calebk/Documents/coding/RoombaController/src/HoleManager.cpp</label>
        <link refid="HoleManager_8cpp"/>
      </node>
      <node id="5">
        <label>/home/calebk/Documents/coding/RoombaController/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classGraph" prot="public">Graph</innerclass>
    <innerclass refid="structGraph_1_1CustomCompare" prot="protected">Graph::CustomCompare</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>caleb<sp/>on<sp/>11/9/21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ANOTHERGRAPH_GRAPH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ANOTHERGRAPH_GRAPH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Node_8hpp" kindref="compound">Node.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Pose2D_8hpp" kindref="compound">Pose2D.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vector&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;map&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="17" refid="classGraph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGraph" kindref="compound">Graph</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19" refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>std::vector&lt;Node&lt;V&gt;*&gt;&gt;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">pair</ref>;</highlight></codeline>
<codeline lineno="20" refid="structGraph_1_1CustomCompare" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGraph_1_1CustomCompare" kindref="compound">CustomCompare</ref><sp/>{</highlight></codeline>
<codeline lineno="21" refid="structGraph_1_1CustomCompare_1accdd3a73208f598a21d1244a2568e86d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structGraph_1_1CustomCompare_1accdd3a73208f598a21d1244a2568e86d" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">pair</ref>&amp;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">first</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">pair</ref>&amp;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">second</ref>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">first</ref>.first<sp/>&gt;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">second</ref>.first;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="25" refid="classGraph_1a5de43165fe4948c19cca80698de7daab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Node&lt;V&gt;*&gt;<sp/><ref refid="classGraph_1a5de43165fe4948c19cca80698de7daab" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="26" refid="classGraph_1a1696c56a696176c26cb94b075e829ead" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;<sp/><ref refid="classGraph_1a1696c56a696176c26cb94b075e829ead" kindref="member">matrix</ref>;</highlight></codeline>
<codeline lineno="27" refid="classGraph_1a326c5e6fe82c176413da20701937e0e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*<sp/><ref refid="classGraph_1a326c5e6fe82c176413da20701937e0e7" kindref="member">head</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28" refid="classGraph_1aeac7d50113228f13fadc0bd85a4daf72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Node&lt;V&gt;*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/><ref refid="classGraph_1aeac7d50113228f13fadc0bd85a4daf72" kindref="member">nodeMap</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a8663524ab6962890aa72d2e146453caf" kindref="member">resize</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGraph_1ae83f3bc4bc54319051c7193039a5f00a" kindref="member">numVisited</ref>(std::vector&lt;bool&gt;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">listOfBools</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGraph_1afbc6316c3b1b5ca0c1cdf226bc62ab0b" kindref="member">contains</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">node</ref>,<sp/>std::vector&lt;<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*&gt;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">listOfNodes</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>printAdjacent(Node&lt;V&gt;*<sp/>next);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a57412516ec06d7b21d377dfe73773f37" kindref="member">addNode</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">newNode</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>printOut();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a57412516ec06d7b21d377dfe73773f37" kindref="member">addNode</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">nextNode</ref>,<sp/>std::vector&lt;<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*&gt;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">adjacentNodes</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">weight</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a57412516ec06d7b21d377dfe73773f37" kindref="member">addNode</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">nextNode</ref>,<sp/>std::vector&lt;<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*&gt;<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">adjacentNodes</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a57412516ec06d7b21d377dfe73773f37" kindref="member">addNode</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">nextNode</ref>,<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">nodeITSLATE</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a38d9119ee08708322eb5908fac0f244f" kindref="member">addConnection</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">one</ref>,<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">two</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">weight</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a38d9119ee08708322eb5908fac0f244f" kindref="member">addConnection</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">one</ref>,<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">two</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a57412516ec06d7b21d377dfe73773f37" kindref="member">addNode</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">nextNode</ref>,<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref><sp/>*<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">nodeITSLATE</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">weight</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a4abe34d5dda78d4055a3098773140325" kindref="member">setHead</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a307d8095432434d7e28cfba1bba884cb" kindref="member">removeNode</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Node&lt;V&gt;*&gt;<sp/><ref refid="classGraph_1a959dfd987107a8848c1c5c5da9f5e776" kindref="member">Dijkstra</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">from</ref>,<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">find</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;<sp/><ref refid="classGraph_1a452eeb65d902b4a95c0e8411885b4bc5" kindref="member">getAdjacencyList</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Node&lt;V&gt;*&gt;<sp/><ref refid="classGraph_1a4969a395490f7e67cc70a7feb58a0b54" kindref="member">getAdj</ref>(<ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">Node&lt;V&gt;</ref>*<sp/><ref refid="classGraph_1a08ffe504d6c612edda7d1d562a577c82" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Node&lt;V&gt;*&gt;<sp/><ref refid="classGraph_1af1568475acf410ff0d52a2d756929064" kindref="member">getNodes</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>playGround();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraph_1a2a55c5945db5ce95020dd32e3df0f094" kindref="member">Graph</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;Node&lt;V&gt;*&gt;<sp/>FrugalKugel(Node&lt;V&gt;*<sp/>find,<sp/>unsigned<sp/>int<sp/>steps);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraph_1a0ef4cf033d61a224e79e62f8d2ae974c" kindref="member">~Graph</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGraph" kindref="compound">Graph&lt;Pose2D&gt;</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//ANOTHERGRAPH_GRAPH_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/calebk/Documents/coding/RoombaController/src/Graph.hpp"/>
  </compounddef>
</doxygen>
